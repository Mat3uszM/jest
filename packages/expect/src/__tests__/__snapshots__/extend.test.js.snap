// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`defines asymmetric unary matchers 1`] = `
"<dim>expect(</>received</><dim>).</>toEqual<dim>(</><green>expected</><dim>) // deep equality</>

<red>- Expected</>
+ Received</>

<dim>  Object {</>
<red>-   \\"value\\": toBeDivisibleBy<2>,</>
+   \\"value\\": 3,</>
<dim>  }</>"
`;

exports[`defines asymmetric unary matchers that can be prefixed by not 1`] = `
"<dim>expect(</>received</><dim>).</>toEqual<dim>(</><green>expected</><dim>) // deep equality</>

<red>- Expected</>
+ Received</>

<dim>  Object {</>
<red>-   \\"value\\": not.toBeDivisibleBy<2>,</>
+   \\"value\\": 2,</>
<dim>  }</>"
`;

exports[`defines asymmetric variadic matchers 1`] = `
"<dim>expect(</>received</><dim>).</>toEqual<dim>(</><green>expected</><dim>) // deep equality</>

<red>- Expected</>
+ Received</>

<dim>  Object {</>
<red>-   \\"value\\": toBeWithinRange<4, 11>,</>
+   \\"value\\": 3,</>
<dim>  }</>"
`;

exports[`defines asymmetric variadic matchers that can be prefixed by not 1`] = `
"<dim>expect(</>received</><dim>).</>toEqual<dim>(</><green>expected</><dim>) // deep equality</>

<red>- Expected</>
+ Received</>

<dim>  Object {</>
<red>-   \\"value\\": not.toBeWithinRange<1, 3>,</>
+   \\"value\\": 2,</>
<dim>  }</>"
`;

exports[`is available globally when matcher is unary 1`] = `"expected 15 to be divisible by 2"`;

exports[`is available globally when matcher is variadic 1`] = `"expected 15 to be within range 1 - 3"`;

exports[`is ok if there is no message specified 1`] = `"No message was specified for this matcher.</>"`;
