// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`.formatExecError() 1`] = `
"  <bold>● </>Test suite failed to run

    Whoops!
"
`;

exports[`codeframe 1`] = `
"  <bold>● </>Test suite failed to run

    Whoops!

    </><red><bold>></></><gray> 1 |</> <cyan>throw</> <cyan>new</> <yellow>Error</>(<green>\\"Whoops!\\"</>)<yellow>;</></>
    </> <gray>   |</>       <red><bold>^</></></>

    <dim>  at Object.<anonymous> (file.js:1:7)</>
"
`;

exports[
  `formatStackTrace does not print code frame when noCodeFrame = true 1`
] = `
"
    <dim>  at Object.<anonymous> (file.js:1:7)</>"
`;

exports[
  `formatStackTrace does not print codeframe when noStackTrace = true 1`
] = `
"
    <dim>  at Object.<anonymous> (file.js:1:7)</>"
`;

exports[`formatStackTrace prints code frame and stacktrace 1`] = `
"
    </><red><bold>></></><gray> 1 |</> <cyan>throw</> <cyan>new</> <yellow>Error</>(<green>\\"Whoops!\\"</>)<yellow>;</></>
    </> <gray>   |</>       <red><bold>^</></></>

    <dim>  at Object.<anonymous> (file.js:1:7)</>"
`;

exports[`formatStackTrace should strip node internals 1`] = `
"<bold><red>  <bold>● </><bold>Unix test</></>

    Expected value to be of type:
      \\"number\\"
    Received:
      \\"\\"
    type:
      \\"string\\"

    <dim>  at Object.it (/__tests__/test.js:8:14)</>
"
`;

exports[`no codeframe 1`] = `
"  <bold>● </>Test suite failed to run

    Whoops!

    <dim>  at Object.<anonymous> (file.js:1:7)</>
"
`;

exports[`no stack 1`] = `
"  <bold>● </>Test suite failed to run

    Whoops!
"
`;

exports[`retains message in babel code frame error 1`] = `
"<bold><red>  <bold>● </><bold>Babel test</></>

    packages/react/src/forwardRef.js: Unexpected token, expected , (20:10)
    </> <gray> 18 | </>        <cyan>false</><yellow>,</>
      <gray> 19 | </>        <green>'forwardRef requires a render function but received a \`memo\` '</>
    <red><bold>></></><gray> 20 | </>          <green>'component. Instead of forwardRef(memo(...)), use '</> <yellow>+</>
      <gray>    | </>          <red><bold>^</></>
      <gray> 21 | </>          <green>'memo(forwardRef(...)).'</><yellow>,</>
      <gray> 22 | </>      )<yellow>;</>
      <gray> 23 | </>    } <cyan>else</> <cyan>if</> (<cyan>typeof</> render <yellow>!==</> <green>'function'</>) {</>
"
`;

exports[`should exclude jest from stack trace for Unix paths. 1`] = `
"<bold><red>  <bold>● </><bold>Unix test</></>

    <dim>  at stack (../jest-jasmine2/build/jasmine-2.4.1.js:1580:17)</>
    <dim>  at Object.it (/build/__tests__/messages-test.js:45:41)</>
"
`;

exports[`should not exclude vendor from stack trace 1`] = `
"<bold><red>  <bold>● </><bold>Vendor test</></>

    Expected value to be of type:
      \\"number\\"
    Received:
      \\"\\"
    type:
      \\"string\\"

    <dim>  at Object.it (/__tests__/vendor/cool_test.js:6:666)</>
    <dim>  at Object.asyncFn (/__tests__/vendor/sulu/node_modules/sulu-content-bundle/best_component.js:1:5)</>
"
`;
