aliases:
  - &deploy
    command: |
      # Deploy Jest website using Docusaurus bot
      git config --global user.email "docusaurus-bot@users.noreply.github.com"
      git config --global user.name "Website Deployment Script"
      echo "machine github.com login docusaurus-bot password $DOCUSAURUS_PUBLISH_TOKEN" > ~/.netrc
      # install Docusaurus and generate file of English strings
      yarn && cd website && yarn run write-translations
      # crowdin install
      sudo apt-get update
      sudo apt-get install default-jre rsync
      wget https://artifacts.crowdin.com/repo/deb/crowdin.deb -O crowdin.deb
      sudo dpkg -i crowdin.deb
      sleep 5
      # translations upload/download
      yarn run crowdin-upload
      yarn run crowdin-download
      # build and publish website
      GIT_USER=docusaurus-bot USE_SSH=false yarn run publish-gh-pages

version: 2
jobs:
  build:
    working_directory: ~/jest
    docker:
      - image: node:9
    steps:
      - checkout
      - restore-cache:
          keys:
            - v1-deps-cache-{{ .Branch }}-{{ "yarn.lock" }}
            - v1-deps-cache-{{ .Branch }}-
            - v1-deps-cache
      - run: yarn --no-progress
      - save-cache:
          paths:
            - node_modules
            - build
          key: v1-deps-cache-{{ .Branch }}-{{ "yarn.lock" }}
      - run: yarn run test-ci-partial
      - persist_to_workspace:
          root: .
          paths:
            - ~/build
            - ~/node_modules

  test-node-9:
    working_directory: ~/jest
    docker:
      - image: node:9
    steps:
      - attach_workspace:
        - at: ~/jest
      - checkout
      - run: yarn --no-progress
      - run: yarn run test-ci-partial

  test-node-8:
    working_directory: ~/jest
    docker:
      - image: node:8
    steps:
      - attach_workspace:
        - at: ~/jest
      - checkout
      - run: yarn --no-progress
      - run: yarn run test-ci

  test-node-6:
    working_directory: ~/jest
    docker:
      - image: node:6
    steps:
      - attach_workspace:
        - at: ~/jest
      - checkout
      - run: yarn --no-progress
      - run: yarn run test-ci-partial

  test-and-deploy-website:
    working_directory: ~/jest
    docker:
      - image: node:9
    steps:
      - attach_workspace:
        - at: ~/jest
      - checkout
      - restore-cache:
          keys:
            - v1-deps-cache-{{ .Branch }}-{{ checksum "website/package.json" }}
            - v1-deps-cache-{{ .Branch }}-
            - v1-deps-cache
      - run: yarn --no-progress
      - save-cache:
          key: v1-deps-cache-{{ .Branch }}-{{ checksum "website/package.json" }}
          paths:
            - website/node_modules
      - deploy: *deploy

  test-browser:
    working_directory: ~/jest
    docker:
      - image: markhobson/node-chrome
    steps:
      - attach_workspace:
        - at: ~/jest
      - checkout
      - run: |
          apt-get update && apt-get install make g++ -y
      - run: npm i -g yarn@^1.3.2
      - run: yarn --no-progress
      - run: yarn run test-ci-es5-build-in-browser

# Workflows enables us to run multiple jobs in parallel
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - test-node-8:
          requires:
            - build
      - test-node-6:
          requires:
            - build
      - test-node-9:
          requires:
            - build
      - test-browser:
          requires:
            - build
      - test-and-deploy-website:
          requires:
            - build
