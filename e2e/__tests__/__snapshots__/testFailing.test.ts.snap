// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`works with all statuses 1`] = `
"FAIL __tests__/statuses.test.js
  ✓ passes
  ✕ fails
  ✓ failing failes = passes
  ✓ failing failes = passes with test syntax
  ✕ failing passes = fails
  ○ skipped skips
  ○ skipped skipped failing 1
  ○ skipped skipped failing 2
  ○ skipped skipped failing with different syntax
  ○ skipped skipped failing with another different syntax
  ✎ todo todo

  ● fails

    expect(received).toBe(expected) // Object.is equality

    Expected: 101
    Received: 10

      11 |
      12 | it('fails', () => {
    > 13 |   expect(10).toBe(101);
         |              ^
      14 | });
      15 |
      16 | it.skip('skips', () => {

      at Object.toBe (__tests__/statuses.test.js:13:14)

  ● failing passes = fails

    Failing test passed even though it was supposed to fail. Remove \`.failing\` to remove error."
`;

exports[`works with only mode 1`] = `
"FAIL __tests__/worksWithOnlyMode.test.js
  block with only, should pass
    ✓ failing failes = passes, should pass
    ○ skipped failing test but skipped
    ○ skipped passing test but skipped
  block with only, should fail
    ✕ failing passes = fails, should fail
    ○ skipped failing test but skipped
    ○ skipped passing test but skipped
  block with only in other it, should skip
    ✕ failing test
    ○ skipped failing passes = fails, should fail but skipped
    ○ skipped passing test but skipped
  block with only with different syntax, should fail
    ✕ failing passes = fails, should fail 1
    ✕ failing passes = fails, should fail 2
    ○ skipped failing test but skipped
    ○ skipped passing test but skipped

  ● block with only, should fail › failing passes = fails, should fail

    Failing test passed even though it was supposed to fail. Remove \`.failing\` to remove error.



  ● block with only in other it, should skip › failing test

    expect(received).toBe(expected) // Object.is equality

    Expected: 101
    Received: 10

      41 |   // eslint-disable-next-line jest/no-focused-tests
      42 |   it.only('failing test', () => {
    > 43 |     expect(10).toBe(101);
         |                ^
      44 |   });
      45 |
      46 |   it('passing test but skipped', () => {

      at Object.toBe (__tests__/worksWithOnlyMode.test.js:43:16)

  ● block with only with different syntax, should fail › failing passes = fails, should fail 1

    Failing test passed even though it was supposed to fail. Remove \`.failing\` to remove error.



  ● block with only with different syntax, should fail › failing passes = fails, should fail 2

    Failing test passed even though it was supposed to fail. Remove \`.failing\` to remove error."
`;

exports[`works with skip mode 1`] = `
"FAIL __tests__/worksWithSkipMode.test.js
  block with only, should pass
    ✕ failing test
    ✓ failing failes = passes
    ○ skipped skipped failing failes = passes, should pass
    ○ skipped passing test
  block with only, should fail
    ✓ passing test
    ✓ failing passes = fails
    ○ skipped failing passes = fails, should fail
    ○ skipped failing test

  ● block with only, should pass › failing test

    expect(received).toBe(expected) // Object.is equality

    Expected: 101
    Received: 10

      12 |
      13 |   it('failing test', () => {
    > 14 |     expect(10).toBe(101);
         |                ^
      15 |   });
      16 |
      17 |   it.skip('passing test', () => {

      at Object.toBe (__tests__/worksWithSkipMode.test.js:14:16)"
`;
