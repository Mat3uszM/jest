// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`deals with http servers and promises 1`] = `
Jest has detected the following 1 open handle potentially preventing Jest from exiting:
Of them 1 was collected within 100ms of the tests completing.
These are sometimes useful to look at as they might have spawned other handles that remain open, but that we have lost the origin of.

There were no uncollected handles - this is unexpected if your tests do not exit cleanly!

  ●  TCPSERVERWRAP (collected within 100ms)

      11 |   const server = http.createServer();
      12 |   await new Promise(resolve => {
    > 13 |     server.listen(resolve);
         |            ^
      14 |   });
      15 |   await new Promise((resolve, reject) => {
      16 |     server.close(err => {

      at listen (__tests__/http.js:13:12)
      at Object.<anonymous> (__tests__/http.js:12:9)
`;

exports[`prints message about flag on forceExit 1`] = `Force exiting Jest: Have you considered using \`--detectOpenHandles\` to detect async operations that kept running after all tests finished?`;

exports[`prints message about flag on slow tests 1`] = `
Jest did not exit one second after the test run has completed.

This usually means that there are asynchronous operations that weren't stopped in your tests. Consider running Jest with \`--detectOpenHandles\` to troubleshoot this issue.
`;

exports[`prints out info about open handlers 1`] = `
Jest has detected the following 3 open handles potentially preventing Jest from exiting:
Of them 1 was collected within 100ms of the tests completing.
These are sometimes useful to look at as they might have spawned other handles that remain open, but that we have lost the origin of.

  ●  DNSCHANNEL (uncollected, potential leak)

      at internal/dns/utils.js:101:23
      at dns.js:38:5

  ●  TCPSERVERWRAP (uncollected, potential leak)

  ●  GETADDRINFOREQWRAP (collected within 100ms)

      12 | const app = new Server();
      13 | 
    > 14 | app.listen({host: 'localhost', port: 0});
         |     ^
      15 | 

      at Object.listen (server.js:14:5)
      at Object.require (__tests__/outside.js:8:1)
`;

exports[`prints out info about open handlers from inside tests 1`] = `
Jest has detected the following 1 open handle potentially preventing Jest from exiting:

  ●  Timeout (uncollected, potential leak)

       7 | 
       8 | test('something', () => {
    >  9 |   setTimeout(() => {}, 30000);
         |   ^
      10 |   expect(true).toBe(true);
      11 | });
      12 | 

      at Object.setTimeout (__tests__/inside.js:9:3)
`;
